// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: customnetwork.proto

package model

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type CustomNetwork_Type int32

const (
	CustomNetwork_L2 CustomNetwork_Type = 0
	CustomNetwork_L3 CustomNetwork_Type = 1
)

var CustomNetwork_Type_name = map[int32]string{
	0: "L2",
	1: "L3",
}

var CustomNetwork_Type_value = map[string]int32{
	"L2": 0,
	"L3": 1,
}

func (x CustomNetwork_Type) String() string {
	return proto.EnumName(CustomNetwork_Type_name, int32(x))
}

func (CustomNetwork_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b52dd016a515b4b0, []int{0, 0}
}

// CustomNetwork is used to store definition of custom network defined via CRD.
type CustomNetwork struct {
	// name of the custom network
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// type of the custom network
	Type CustomNetwork_Type `protobuf:"varint,2,opt,name=type,proto3,enum=model.CustomNetwork_Type" json:"type,omitempty"`
	// subnet of the custom network
	SubnetCIDR string `protobuf:"bytes,3,opt,name=subnetCIDR,proto3" json:"subnetCIDR,omitempty"`
	// prefix length defining network subnet used for each node in the cluster
	SubnetOneNodePrefix  uint32   `protobuf:"varint,4,opt,name=subnet_one_node_prefix,json=subnetOneNodePrefix,proto3" json:"subnet_one_node_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomNetwork) Reset()         { *m = CustomNetwork{} }
func (m *CustomNetwork) String() string { return proto.CompactTextString(m) }
func (*CustomNetwork) ProtoMessage()    {}
func (*CustomNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_b52dd016a515b4b0, []int{0}
}
func (m *CustomNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomNetwork.Unmarshal(m, b)
}
func (m *CustomNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomNetwork.Marshal(b, m, deterministic)
}
func (m *CustomNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomNetwork.Merge(m, src)
}
func (m *CustomNetwork) XXX_Size() int {
	return xxx_messageInfo_CustomNetwork.Size(m)
}
func (m *CustomNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_CustomNetwork proto.InternalMessageInfo

func (m *CustomNetwork) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomNetwork) GetType() CustomNetwork_Type {
	if m != nil {
		return m.Type
	}
	return CustomNetwork_L2
}

func (m *CustomNetwork) GetSubnetCIDR() string {
	if m != nil {
		return m.SubnetCIDR
	}
	return ""
}

func (m *CustomNetwork) GetSubnetOneNodePrefix() uint32 {
	if m != nil {
		return m.SubnetOneNodePrefix
	}
	return 0
}

func init() {
	proto.RegisterEnum("model.CustomNetwork_Type", CustomNetwork_Type_name, CustomNetwork_Type_value)
	proto.RegisterType((*CustomNetwork)(nil), "model.CustomNetwork")
}

func init() { proto.RegisterFile("customnetwork.proto", fileDescriptor_b52dd016a515b4b0) }

var fileDescriptor_b52dd016a515b4b0 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2e, 0x2d, 0x2e,
	0xc9, 0xcf, 0xcd, 0x4b, 0x2d, 0x29, 0xcf, 0x2f, 0xca, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0xcd, 0xcd, 0x4f, 0x49, 0xcd, 0x51, 0xda, 0xcf, 0xc8, 0xc5, 0xeb, 0x0c, 0x96, 0xf6, 0x83,
	0x48, 0x0b, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0x81, 0xd9, 0x42, 0xba, 0x5c, 0x2c, 0x25, 0x95, 0x05, 0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x7c,
	0x46, 0x92, 0x7a, 0x60, 0xbd, 0x7a, 0x28, 0xfa, 0xf4, 0x42, 0x2a, 0x0b, 0x52, 0x83, 0xc0, 0xca,
	0x84, 0xe4, 0xb8, 0xb8, 0x8a, 0x4b, 0x93, 0xf2, 0x52, 0x4b, 0x9c, 0x3d, 0x5d, 0x82, 0x24, 0x98,
	0xc1, 0x06, 0x21, 0x89, 0x08, 0x19, 0x73, 0x89, 0x41, 0x78, 0xf1, 0xf9, 0x79, 0xa9, 0xf1, 0x79,
	0xf9, 0x29, 0xa9, 0xf1, 0x05, 0x45, 0xa9, 0x69, 0x99, 0x15, 0x12, 0x2c, 0x0a, 0x8c, 0x1a, 0xbc,
	0x41, 0xc2, 0x10, 0x59, 0xff, 0xbc, 0x54, 0xbf, 0xfc, 0x94, 0xd4, 0x00, 0xb0, 0x94, 0x92, 0x18,
	0x17, 0x0b, 0xc8, 0x0a, 0x21, 0x36, 0x2e, 0x26, 0x1f, 0x23, 0x01, 0x06, 0x30, 0x6d, 0x2c, 0xc0,
	0x98, 0xc4, 0x06, 0xf6, 0x8f, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xa1, 0xbd, 0x06, 0xe6,
	0x00, 0x00, 0x00,
}
