// Code generated by govpp binapi-generator DO NOT EDIT.
// Package ip represents the VPP binary API of the 'ip' VPP module.
// Generated from '/usr/share/vpp/api/ip.api.json'
package ip

import "git.fd.io/govpp.git/api"

// FibPath represents the VPP binary API data type 'fib_path'.
//
type FibPath struct {
	SwIfIndex  uint32
	TableID    uint32
	Weight     uint8
	Preference uint8
	IsLocal    uint8
	IsDrop     uint8
	IsUnreach  uint8
	IsProhibit uint8
	Afi        uint8
	NextHop    []byte `struc:"[16]byte"`
}

func (*FibPath) GetTypeName() string {
	return "fib_path"
}
func (*FibPath) GetCrcString() string {
	return "efe16951"
}

// IPTableAddDel represents the VPP binary API message 'ip_table_add_del'.
//
type IPTableAddDel struct {
	TableID uint32
	IsIpv6  uint8
	IsAdd   uint8
	Name    []byte `struc:"[64]byte"`
}

func (*IPTableAddDel) GetMessageName() string {
	return "ip_table_add_del"
}
func (*IPTableAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPTableAddDel) GetCrcString() string {
	return "7192123e"
}
func NewIPTableAddDel() api.Message {
	return &IPTableAddDel{}
}

// IPTableAddDelReply represents the VPP binary API message 'ip_table_add_del_reply'.
//
type IPTableAddDelReply struct {
	Retval int32
}

func (*IPTableAddDelReply) GetMessageName() string {
	return "ip_table_add_del_reply"
}
func (*IPTableAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPTableAddDelReply) GetCrcString() string {
	return "7da725be"
}
func NewIPTableAddDelReply() api.Message {
	return &IPTableAddDelReply{}
}

// IPFibDump represents the VPP binary API message 'ip_fib_dump'.
//
type IPFibDump struct {
}

func (*IPFibDump) GetMessageName() string {
	return "ip_fib_dump"
}
func (*IPFibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPFibDump) GetCrcString() string {
	return "5fe56ca3"
}
func NewIPFibDump() api.Message {
	return &IPFibDump{}
}

// IPFibDetails represents the VPP binary API message 'ip_fib_details'.
//
type IPFibDetails struct {
	TableID       uint32
	TableName     []byte `struc:"[64]byte"`
	AddressLength uint8
	Address       []byte `struc:"[4]byte"`
	Count         uint32 `struc:"sizeof=Path"`
	Path          []FibPath
}

func (*IPFibDetails) GetMessageName() string {
	return "ip_fib_details"
}
func (*IPFibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPFibDetails) GetCrcString() string {
	return "273e00c4"
}
func NewIPFibDetails() api.Message {
	return &IPFibDetails{}
}

// IP6FibDump represents the VPP binary API message 'ip6_fib_dump'.
//
type IP6FibDump struct {
}

func (*IP6FibDump) GetMessageName() string {
	return "ip6_fib_dump"
}
func (*IP6FibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IP6FibDump) GetCrcString() string {
	return "25c89676"
}
func NewIP6FibDump() api.Message {
	return &IP6FibDump{}
}

// IP6FibDetails represents the VPP binary API message 'ip6_fib_details'.
//
type IP6FibDetails struct {
	TableID       uint32
	TableName     []byte `struc:"[64]byte"`
	AddressLength uint8
	Address       []byte `struc:"[16]byte"`
	Count         uint32 `struc:"sizeof=Path"`
	Path          []FibPath
}

func (*IP6FibDetails) GetMessageName() string {
	return "ip6_fib_details"
}
func (*IP6FibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IP6FibDetails) GetCrcString() string {
	return "f5f9e17e"
}
func NewIP6FibDetails() api.Message {
	return &IP6FibDetails{}
}

// IPNeighborDump represents the VPP binary API message 'ip_neighbor_dump'.
//
type IPNeighborDump struct {
	SwIfIndex uint32
	IsIpv6    uint8
}

func (*IPNeighborDump) GetMessageName() string {
	return "ip_neighbor_dump"
}
func (*IPNeighborDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPNeighborDump) GetCrcString() string {
	return "3289e160"
}
func NewIPNeighborDump() api.Message {
	return &IPNeighborDump{}
}

// IPNeighborDetails represents the VPP binary API message 'ip_neighbor_details'.
//
type IPNeighborDetails struct {
	SwIfIndex  uint32
	IsStatic   uint8
	IsIpv6     uint8
	MacAddress []byte `struc:"[6]byte"`
	IPAddress  []byte `struc:"[16]byte"`
}

func (*IPNeighborDetails) GetMessageName() string {
	return "ip_neighbor_details"
}
func (*IPNeighborDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPNeighborDetails) GetCrcString() string {
	return "0fb7636d"
}
func NewIPNeighborDetails() api.Message {
	return &IPNeighborDetails{}
}

// IPNeighborAddDel represents the VPP binary API message 'ip_neighbor_add_del'.
//
type IPNeighborAddDel struct {
	SwIfIndex  uint32
	IsAdd      uint8
	IsIpv6     uint8
	IsStatic   uint8
	IsNoAdjFib uint8
	MacAddress []byte `struc:"[6]byte"`
	DstAddress []byte `struc:"[16]byte"`
}

func (*IPNeighborAddDel) GetMessageName() string {
	return "ip_neighbor_add_del"
}
func (*IPNeighborAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPNeighborAddDel) GetCrcString() string {
	return "5a0d070b"
}
func NewIPNeighborAddDel() api.Message {
	return &IPNeighborAddDel{}
}

// IPNeighborAddDelReply represents the VPP binary API message 'ip_neighbor_add_del_reply'.
//
type IPNeighborAddDelReply struct {
	Retval int32
}

func (*IPNeighborAddDelReply) GetMessageName() string {
	return "ip_neighbor_add_del_reply"
}
func (*IPNeighborAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPNeighborAddDelReply) GetCrcString() string {
	return "e5b0f318"
}
func NewIPNeighborAddDelReply() api.Message {
	return &IPNeighborAddDelReply{}
}

// SetIPFlowHash represents the VPP binary API message 'set_ip_flow_hash'.
//
type SetIPFlowHash struct {
	VrfID   uint32
	IsIpv6  uint8
	Src     uint8
	Dst     uint8
	Sport   uint8
	Dport   uint8
	Proto   uint8
	Reverse uint8
}

func (*SetIPFlowHash) GetMessageName() string {
	return "set_ip_flow_hash"
}
func (*SetIPFlowHash) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SetIPFlowHash) GetCrcString() string {
	return "92ad3798"
}
func NewSetIPFlowHash() api.Message {
	return &SetIPFlowHash{}
}

// SetIPFlowHashReply represents the VPP binary API message 'set_ip_flow_hash_reply'.
//
type SetIPFlowHashReply struct {
	Retval int32
}

func (*SetIPFlowHashReply) GetMessageName() string {
	return "set_ip_flow_hash_reply"
}
func (*SetIPFlowHashReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SetIPFlowHashReply) GetCrcString() string {
	return "35a9e5eb"
}
func NewSetIPFlowHashReply() api.Message {
	return &SetIPFlowHashReply{}
}

// SwInterfaceIP6ndRaConfig represents the VPP binary API message 'sw_interface_ip6nd_ra_config'.
//
type SwInterfaceIP6ndRaConfig struct {
	SwIfIndex       uint32
	Suppress        uint8
	Managed         uint8
	Other           uint8
	LlOption        uint8
	SendUnicast     uint8
	Cease           uint8
	IsNo            uint8
	DefaultRouter   uint8
	MaxInterval     uint32
	MinInterval     uint32
	Lifetime        uint32
	InitialCount    uint32
	InitialInterval uint32
}

func (*SwInterfaceIP6ndRaConfig) GetMessageName() string {
	return "sw_interface_ip6nd_ra_config"
}
func (*SwInterfaceIP6ndRaConfig) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SwInterfaceIP6ndRaConfig) GetCrcString() string {
	return "ec4a29f6"
}
func NewSwInterfaceIP6ndRaConfig() api.Message {
	return &SwInterfaceIP6ndRaConfig{}
}

// SwInterfaceIP6ndRaConfigReply represents the VPP binary API message 'sw_interface_ip6nd_ra_config_reply'.
//
type SwInterfaceIP6ndRaConfigReply struct {
	Retval int32
}

func (*SwInterfaceIP6ndRaConfigReply) GetMessageName() string {
	return "sw_interface_ip6nd_ra_config_reply"
}
func (*SwInterfaceIP6ndRaConfigReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SwInterfaceIP6ndRaConfigReply) GetCrcString() string {
	return "16e25c5b"
}
func NewSwInterfaceIP6ndRaConfigReply() api.Message {
	return &SwInterfaceIP6ndRaConfigReply{}
}

// SwInterfaceIP6ndRaPrefix represents the VPP binary API message 'sw_interface_ip6nd_ra_prefix'.
//
type SwInterfaceIP6ndRaPrefix struct {
	SwIfIndex     uint32
	Address       []byte `struc:"[16]byte"`
	AddressLength uint8
	UseDefault    uint8
	NoAdvertise   uint8
	OffLink       uint8
	NoAutoconfig  uint8
	NoOnlink      uint8
	IsNo          uint8
	ValLifetime   uint32
	PrefLifetime  uint32
}

func (*SwInterfaceIP6ndRaPrefix) GetMessageName() string {
	return "sw_interface_ip6nd_ra_prefix"
}
func (*SwInterfaceIP6ndRaPrefix) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SwInterfaceIP6ndRaPrefix) GetCrcString() string {
	return "5db6555c"
}
func NewSwInterfaceIP6ndRaPrefix() api.Message {
	return &SwInterfaceIP6ndRaPrefix{}
}

// SwInterfaceIP6ndRaPrefixReply represents the VPP binary API message 'sw_interface_ip6nd_ra_prefix_reply'.
//
type SwInterfaceIP6ndRaPrefixReply struct {
	Retval int32
}

func (*SwInterfaceIP6ndRaPrefixReply) GetMessageName() string {
	return "sw_interface_ip6nd_ra_prefix_reply"
}
func (*SwInterfaceIP6ndRaPrefixReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SwInterfaceIP6ndRaPrefixReply) GetCrcString() string {
	return "8050adb3"
}
func NewSwInterfaceIP6ndRaPrefixReply() api.Message {
	return &SwInterfaceIP6ndRaPrefixReply{}
}

// IP6ndProxyAddDel represents the VPP binary API message 'ip6nd_proxy_add_del'.
//
type IP6ndProxyAddDel struct {
	SwIfIndex uint32
	IsDel     uint8
	Address   []byte `struc:"[16]byte"`
}

func (*IP6ndProxyAddDel) GetMessageName() string {
	return "ip6nd_proxy_add_del"
}
func (*IP6ndProxyAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IP6ndProxyAddDel) GetCrcString() string {
	return "c56f802d"
}
func NewIP6ndProxyAddDel() api.Message {
	return &IP6ndProxyAddDel{}
}

// IP6ndProxyAddDelReply represents the VPP binary API message 'ip6nd_proxy_add_del_reply'.
//
type IP6ndProxyAddDelReply struct {
	Retval int32
}

func (*IP6ndProxyAddDelReply) GetMessageName() string {
	return "ip6nd_proxy_add_del_reply"
}
func (*IP6ndProxyAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IP6ndProxyAddDelReply) GetCrcString() string {
	return "00ddc2d5"
}
func NewIP6ndProxyAddDelReply() api.Message {
	return &IP6ndProxyAddDelReply{}
}

// IP6ndProxyDetails represents the VPP binary API message 'ip6nd_proxy_details'.
//
type IP6ndProxyDetails struct {
	SwIfIndex uint32
	Address   []byte `struc:"[16]byte"`
}

func (*IP6ndProxyDetails) GetMessageName() string {
	return "ip6nd_proxy_details"
}
func (*IP6ndProxyDetails) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IP6ndProxyDetails) GetCrcString() string {
	return "f805ccc1"
}
func NewIP6ndProxyDetails() api.Message {
	return &IP6ndProxyDetails{}
}

// IP6ndProxyDump represents the VPP binary API message 'ip6nd_proxy_dump'.
//
type IP6ndProxyDump struct {
}

func (*IP6ndProxyDump) GetMessageName() string {
	return "ip6nd_proxy_dump"
}
func (*IP6ndProxyDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IP6ndProxyDump) GetCrcString() string {
	return "21597d88"
}
func NewIP6ndProxyDump() api.Message {
	return &IP6ndProxyDump{}
}

// SwInterfaceIP6EnableDisable represents the VPP binary API message 'sw_interface_ip6_enable_disable'.
//
type SwInterfaceIP6EnableDisable struct {
	SwIfIndex uint32
	Enable    uint8
}

func (*SwInterfaceIP6EnableDisable) GetMessageName() string {
	return "sw_interface_ip6_enable_disable"
}
func (*SwInterfaceIP6EnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SwInterfaceIP6EnableDisable) GetCrcString() string {
	return "4a4e5405"
}
func NewSwInterfaceIP6EnableDisable() api.Message {
	return &SwInterfaceIP6EnableDisable{}
}

// SwInterfaceIP6EnableDisableReply represents the VPP binary API message 'sw_interface_ip6_enable_disable_reply'.
//
type SwInterfaceIP6EnableDisableReply struct {
	Retval int32
}

func (*SwInterfaceIP6EnableDisableReply) GetMessageName() string {
	return "sw_interface_ip6_enable_disable_reply"
}
func (*SwInterfaceIP6EnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SwInterfaceIP6EnableDisableReply) GetCrcString() string {
	return "eb8b4a40"
}
func NewSwInterfaceIP6EnableDisableReply() api.Message {
	return &SwInterfaceIP6EnableDisableReply{}
}

// SwInterfaceIP6SetLinkLocalAddress represents the VPP binary API message 'sw_interface_ip6_set_link_local_address'.
//
type SwInterfaceIP6SetLinkLocalAddress struct {
	SwIfIndex uint32
	Address   []byte `struc:"[16]byte"`
}

func (*SwInterfaceIP6SetLinkLocalAddress) GetMessageName() string {
	return "sw_interface_ip6_set_link_local_address"
}
func (*SwInterfaceIP6SetLinkLocalAddress) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SwInterfaceIP6SetLinkLocalAddress) GetCrcString() string {
	return "3db6d52b"
}
func NewSwInterfaceIP6SetLinkLocalAddress() api.Message {
	return &SwInterfaceIP6SetLinkLocalAddress{}
}

// SwInterfaceIP6SetLinkLocalAddressReply represents the VPP binary API message 'sw_interface_ip6_set_link_local_address_reply'.
//
type SwInterfaceIP6SetLinkLocalAddressReply struct {
	Retval int32
}

func (*SwInterfaceIP6SetLinkLocalAddressReply) GetMessageName() string {
	return "sw_interface_ip6_set_link_local_address_reply"
}
func (*SwInterfaceIP6SetLinkLocalAddressReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SwInterfaceIP6SetLinkLocalAddressReply) GetCrcString() string {
	return "0a781e17"
}
func NewSwInterfaceIP6SetLinkLocalAddressReply() api.Message {
	return &SwInterfaceIP6SetLinkLocalAddressReply{}
}

// IPAddDelRoute represents the VPP binary API message 'ip_add_del_route'.
//
type IPAddDelRoute struct {
	NextHopSwIfIndex     uint32
	TableID              uint32
	ClassifyTableIndex   uint32
	NextHopTableID       uint32
	NextHopID            uint32
	IsAdd                uint8
	IsDrop               uint8
	IsUnreach            uint8
	IsProhibit           uint8
	IsIpv6               uint8
	IsLocal              uint8
	IsClassify           uint8
	IsMultipath          uint8
	IsResolveHost        uint8
	IsResolveAttached    uint8
	IsL2Bridged          uint8
	IsSourceLookup       uint8
	IsUDPEncap           uint8
	NextHopWeight        uint8
	NextHopPreference    uint8
	NextHopProto         uint8
	DstAddressLength     uint8
	DstAddress           []byte `struc:"[16]byte"`
	NextHopAddress       []byte `struc:"[16]byte"`
	NextHopNOutLabels    uint8  `struc:"sizeof=NextHopOutLabelStack"`
	NextHopViaLabel      uint32
	NextHopOutLabelStack []uint32
}

func (*IPAddDelRoute) GetMessageName() string {
	return "ip_add_del_route"
}
func (*IPAddDelRoute) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPAddDelRoute) GetCrcString() string {
	return "185f7474"
}
func NewIPAddDelRoute() api.Message {
	return &IPAddDelRoute{}
}

// IPAddDelRouteReply represents the VPP binary API message 'ip_add_del_route_reply'.
//
type IPAddDelRouteReply struct {
	Retval int32
}

func (*IPAddDelRouteReply) GetMessageName() string {
	return "ip_add_del_route_reply"
}
func (*IPAddDelRouteReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPAddDelRouteReply) GetCrcString() string {
	return "ea57492b"
}
func NewIPAddDelRouteReply() api.Message {
	return &IPAddDelRouteReply{}
}

// IPMrouteAddDel represents the VPP binary API message 'ip_mroute_add_del'.
//
type IPMrouteAddDel struct {
	NextHopSwIfIndex uint32
	TableID          uint32
	EntryFlags       uint32
	ItfFlags         uint32
	RpfID            uint32
	BierImp          uint32
	GrpAddressLength uint16
	NextHopAfi       uint8
	IsAdd            uint8
	IsIpv6           uint8
	IsLocal          uint8
	GrpAddress       []byte `struc:"[16]byte"`
	SrcAddress       []byte `struc:"[16]byte"`
}

func (*IPMrouteAddDel) GetMessageName() string {
	return "ip_mroute_add_del"
}
func (*IPMrouteAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPMrouteAddDel) GetCrcString() string {
	return "1954810a"
}
func NewIPMrouteAddDel() api.Message {
	return &IPMrouteAddDel{}
}

// IPMrouteAddDelReply represents the VPP binary API message 'ip_mroute_add_del_reply'.
//
type IPMrouteAddDelReply struct {
	Retval int32
}

func (*IPMrouteAddDelReply) GetMessageName() string {
	return "ip_mroute_add_del_reply"
}
func (*IPMrouteAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPMrouteAddDelReply) GetCrcString() string {
	return "8cabe02c"
}
func NewIPMrouteAddDelReply() api.Message {
	return &IPMrouteAddDelReply{}
}

// IPMfibDump represents the VPP binary API message 'ip_mfib_dump'.
//
type IPMfibDump struct {
}

func (*IPMfibDump) GetMessageName() string {
	return "ip_mfib_dump"
}
func (*IPMfibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPMfibDump) GetCrcString() string {
	return "ee61390e"
}
func NewIPMfibDump() api.Message {
	return &IPMfibDump{}
}

// IPMfibDetails represents the VPP binary API message 'ip_mfib_details'.
//
type IPMfibDetails struct {
	TableID       uint32
	EntryFlags    uint32
	RpfID         uint32
	AddressLength uint8
	GrpAddress    []byte `struc:"[4]byte"`
	SrcAddress    []byte `struc:"[4]byte"`
	Count         uint32 `struc:"sizeof=Path"`
	Path          []FibPath
}

func (*IPMfibDetails) GetMessageName() string {
	return "ip_mfib_details"
}
func (*IPMfibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPMfibDetails) GetCrcString() string {
	return "395e5699"
}
func NewIPMfibDetails() api.Message {
	return &IPMfibDetails{}
}

// IP6MfibDump represents the VPP binary API message 'ip6_mfib_dump'.
//
type IP6MfibDump struct {
}

func (*IP6MfibDump) GetMessageName() string {
	return "ip6_mfib_dump"
}
func (*IP6MfibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IP6MfibDump) GetCrcString() string {
	return "0839e143"
}
func NewIP6MfibDump() api.Message {
	return &IP6MfibDump{}
}

// IP6MfibDetails represents the VPP binary API message 'ip6_mfib_details'.
//
type IP6MfibDetails struct {
	TableID       uint32
	AddressLength uint8
	GrpAddress    []byte `struc:"[16]byte"`
	SrcAddress    []byte `struc:"[16]byte"`
	Count         uint32 `struc:"sizeof=Path"`
	Path          []FibPath
}

func (*IP6MfibDetails) GetMessageName() string {
	return "ip6_mfib_details"
}
func (*IP6MfibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IP6MfibDetails) GetCrcString() string {
	return "921b153f"
}
func NewIP6MfibDetails() api.Message {
	return &IP6MfibDetails{}
}

// IPAddressDetails represents the VPP binary API message 'ip_address_details'.
//
type IPAddressDetails struct {
	IP           []byte `struc:"[16]byte"`
	PrefixLength uint8
	SwIfIndex    uint32
	IsIpv6       uint8
}

func (*IPAddressDetails) GetMessageName() string {
	return "ip_address_details"
}
func (*IPAddressDetails) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPAddressDetails) GetCrcString() string {
	return "190d4266"
}
func NewIPAddressDetails() api.Message {
	return &IPAddressDetails{}
}

// IPAddressDump represents the VPP binary API message 'ip_address_dump'.
//
type IPAddressDump struct {
	SwIfIndex uint32
	IsIpv6    uint8
}

func (*IPAddressDump) GetMessageName() string {
	return "ip_address_dump"
}
func (*IPAddressDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPAddressDump) GetCrcString() string {
	return "632e859a"
}
func NewIPAddressDump() api.Message {
	return &IPAddressDump{}
}

// IPDetails represents the VPP binary API message 'ip_details'.
//
type IPDetails struct {
	SwIfIndex uint32
	Context   uint32
	IsIpv6    uint8
}

func (*IPDetails) GetMessageName() string {
	return "ip_details"
}
func (*IPDetails) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*IPDetails) GetCrcString() string {
	return "695c8227"
}
func NewIPDetails() api.Message {
	return &IPDetails{}
}

// IPDump represents the VPP binary API message 'ip_dump'.
//
type IPDump struct {
	IsIpv6 uint8
}

func (*IPDump) GetMessageName() string {
	return "ip_dump"
}
func (*IPDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPDump) GetCrcString() string {
	return "3c1e33e0"
}
func NewIPDump() api.Message {
	return &IPDump{}
}

// MfibSignalDump represents the VPP binary API message 'mfib_signal_dump'.
//
type MfibSignalDump struct {
}

func (*MfibSignalDump) GetMessageName() string {
	return "mfib_signal_dump"
}
func (*MfibSignalDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MfibSignalDump) GetCrcString() string {
	return "bbbbd40d"
}
func NewMfibSignalDump() api.Message {
	return &MfibSignalDump{}
}

// MfibSignalDetails represents the VPP binary API message 'mfib_signal_details'.
//
type MfibSignalDetails struct {
	SwIfIndex     uint32
	TableID       uint32
	GrpAddressLen uint16
	GrpAddress    []byte `struc:"[16]byte"`
	SrcAddress    []byte `struc:"[16]byte"`
	IPPacketLen   uint16
	IPPacketData  []byte `struc:"[256]byte"`
}

func (*MfibSignalDetails) GetMessageName() string {
	return "mfib_signal_details"
}
func (*MfibSignalDetails) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*MfibSignalDetails) GetCrcString() string {
	return "6ba92c72"
}
func NewMfibSignalDetails() api.Message {
	return &MfibSignalDetails{}
}

// IPPuntPolice represents the VPP binary API message 'ip_punt_police'.
//
type IPPuntPolice struct {
	PolicerIndex uint32
	IsAdd        uint8
	IsIP6        uint8
}

func (*IPPuntPolice) GetMessageName() string {
	return "ip_punt_police"
}
func (*IPPuntPolice) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPPuntPolice) GetCrcString() string {
	return "67a12a99"
}
func NewIPPuntPolice() api.Message {
	return &IPPuntPolice{}
}

// IPPuntPoliceReply represents the VPP binary API message 'ip_punt_police_reply'.
//
type IPPuntPoliceReply struct {
	Retval int32
}

func (*IPPuntPoliceReply) GetMessageName() string {
	return "ip_punt_police_reply"
}
func (*IPPuntPoliceReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPPuntPoliceReply) GetCrcString() string {
	return "0b287e3e"
}
func NewIPPuntPoliceReply() api.Message {
	return &IPPuntPoliceReply{}
}

// IPPuntRedirect represents the VPP binary API message 'ip_punt_redirect'.
//
type IPPuntRedirect struct {
	RxSwIfIndex uint32
	TxSwIfIndex uint32
	IsAdd       uint8
	IsIP6       uint8
	Nh          []byte `struc:"[16]byte"`
}

func (*IPPuntRedirect) GetMessageName() string {
	return "ip_punt_redirect"
}
func (*IPPuntRedirect) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPPuntRedirect) GetCrcString() string {
	return "09b80337"
}
func NewIPPuntRedirect() api.Message {
	return &IPPuntRedirect{}
}

// IPPuntRedirectReply represents the VPP binary API message 'ip_punt_redirect_reply'.
//
type IPPuntRedirectReply struct {
	Retval int32
}

func (*IPPuntRedirectReply) GetMessageName() string {
	return "ip_punt_redirect_reply"
}
func (*IPPuntRedirectReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPPuntRedirectReply) GetCrcString() string {
	return "225b9ded"
}
func NewIPPuntRedirectReply() api.Message {
	return &IPPuntRedirectReply{}
}

// IPContainerProxyAddDel represents the VPP binary API message 'ip_container_proxy_add_del'.
//
type IPContainerProxyAddDel struct {
	IP        []byte `struc:"[16]byte"`
	IsIP4     uint8
	Plen      uint8
	SwIfIndex uint32
	IsAdd     uint8
}

func (*IPContainerProxyAddDel) GetMessageName() string {
	return "ip_container_proxy_add_del"
}
func (*IPContainerProxyAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPContainerProxyAddDel) GetCrcString() string {
	return "ba56e466"
}
func NewIPContainerProxyAddDel() api.Message {
	return &IPContainerProxyAddDel{}
}

// IPContainerProxyAddDelReply represents the VPP binary API message 'ip_container_proxy_add_del_reply'.
//
type IPContainerProxyAddDelReply struct {
	Retval int32
}

func (*IPContainerProxyAddDelReply) GetMessageName() string {
	return "ip_container_proxy_add_del_reply"
}
func (*IPContainerProxyAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPContainerProxyAddDelReply) GetCrcString() string {
	return "36d95d31"
}
func NewIPContainerProxyAddDelReply() api.Message {
	return &IPContainerProxyAddDelReply{}
}

// IPSourceAndPortRangeCheckAddDel represents the VPP binary API message 'ip_source_and_port_range_check_add_del'.
//
type IPSourceAndPortRangeCheckAddDel struct {
	IsIpv6         uint8
	IsAdd          uint8
	MaskLength     uint8
	Address        []byte `struc:"[16]byte"`
	NumberOfRanges uint8
	LowPorts       []uint16 `struc:"[32]uint16"`
	HighPorts      []uint16 `struc:"[32]uint16"`
	VrfID          uint32
}

func (*IPSourceAndPortRangeCheckAddDel) GetMessageName() string {
	return "ip_source_and_port_range_check_add_del"
}
func (*IPSourceAndPortRangeCheckAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPSourceAndPortRangeCheckAddDel) GetCrcString() string {
	return "0f8c6ba0"
}
func NewIPSourceAndPortRangeCheckAddDel() api.Message {
	return &IPSourceAndPortRangeCheckAddDel{}
}

// IPSourceAndPortRangeCheckAddDelReply represents the VPP binary API message 'ip_source_and_port_range_check_add_del_reply'.
//
type IPSourceAndPortRangeCheckAddDelReply struct {
	Retval int32
}

func (*IPSourceAndPortRangeCheckAddDelReply) GetMessageName() string {
	return "ip_source_and_port_range_check_add_del_reply"
}
func (*IPSourceAndPortRangeCheckAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPSourceAndPortRangeCheckAddDelReply) GetCrcString() string {
	return "35df8160"
}
func NewIPSourceAndPortRangeCheckAddDelReply() api.Message {
	return &IPSourceAndPortRangeCheckAddDelReply{}
}

// IPSourceAndPortRangeCheckInterfaceAddDel represents the VPP binary API message 'ip_source_and_port_range_check_interface_add_del'.
//
type IPSourceAndPortRangeCheckInterfaceAddDel struct {
	IsAdd       uint8
	SwIfIndex   uint32
	TCPInVrfID  uint32
	TCPOutVrfID uint32
	UDPInVrfID  uint32
	UDPOutVrfID uint32
}

func (*IPSourceAndPortRangeCheckInterfaceAddDel) GetMessageName() string {
	return "ip_source_and_port_range_check_interface_add_del"
}
func (*IPSourceAndPortRangeCheckInterfaceAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPSourceAndPortRangeCheckInterfaceAddDel) GetCrcString() string {
	return "4a6438f1"
}
func NewIPSourceAndPortRangeCheckInterfaceAddDel() api.Message {
	return &IPSourceAndPortRangeCheckInterfaceAddDel{}
}

// IPSourceAndPortRangeCheckInterfaceAddDelReply represents the VPP binary API message 'ip_source_and_port_range_check_interface_add_del_reply'.
//
type IPSourceAndPortRangeCheckInterfaceAddDelReply struct {
	Retval int32
}

func (*IPSourceAndPortRangeCheckInterfaceAddDelReply) GetMessageName() string {
	return "ip_source_and_port_range_check_interface_add_del_reply"
}
func (*IPSourceAndPortRangeCheckInterfaceAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPSourceAndPortRangeCheckInterfaceAddDelReply) GetCrcString() string {
	return "6b940f04"
}
func NewIPSourceAndPortRangeCheckInterfaceAddDelReply() api.Message {
	return &IPSourceAndPortRangeCheckInterfaceAddDelReply{}
}

// IPScanNeighborEnableDisable represents the VPP binary API message 'ip_scan_neighbor_enable_disable'.
//
type IPScanNeighborEnableDisable struct {
	Mode           uint8
	ScanInterval   uint8
	MaxProcTime    uint8
	MaxUpdate      uint8
	ScanIntDelay   uint8
	StaleThreshold uint8
}

func (*IPScanNeighborEnableDisable) GetMessageName() string {
	return "ip_scan_neighbor_enable_disable"
}
func (*IPScanNeighborEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IPScanNeighborEnableDisable) GetCrcString() string {
	return "7134c2c8"
}
func NewIPScanNeighborEnableDisable() api.Message {
	return &IPScanNeighborEnableDisable{}
}

// IPScanNeighborEnableDisableReply represents the VPP binary API message 'ip_scan_neighbor_enable_disable_reply'.
//
type IPScanNeighborEnableDisableReply struct {
	Retval int32
}

func (*IPScanNeighborEnableDisableReply) GetMessageName() string {
	return "ip_scan_neighbor_enable_disable_reply"
}
func (*IPScanNeighborEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IPScanNeighborEnableDisableReply) GetCrcString() string {
	return "c0cd9f52"
}
func NewIPScanNeighborEnableDisableReply() api.Message {
	return &IPScanNeighborEnableDisableReply{}
}

// WantIP4ArpEvents represents the VPP binary API message 'want_ip4_arp_events'.
//
type WantIP4ArpEvents struct {
	EnableDisable uint8
	Pid           uint32
	Address       uint32
}

func (*WantIP4ArpEvents) GetMessageName() string {
	return "want_ip4_arp_events"
}
func (*WantIP4ArpEvents) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantIP4ArpEvents) GetCrcString() string {
	return "5ae044c2"
}
func NewWantIP4ArpEvents() api.Message {
	return &WantIP4ArpEvents{}
}

// WantIP4ArpEventsReply represents the VPP binary API message 'want_ip4_arp_events_reply'.
//
type WantIP4ArpEventsReply struct {
	Retval int32
}

func (*WantIP4ArpEventsReply) GetMessageName() string {
	return "want_ip4_arp_events_reply"
}
func (*WantIP4ArpEventsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantIP4ArpEventsReply) GetCrcString() string {
	return "e1c0b59e"
}
func NewWantIP4ArpEventsReply() api.Message {
	return &WantIP4ArpEventsReply{}
}

// IP4ArpEvent represents the VPP binary API message 'ip4_arp_event'.
//
type IP4ArpEvent struct {
	Address   uint32
	Pid       uint32
	SwIfIndex uint32
	NewMac    []byte `struc:"[6]byte"`
	MacIP     uint8
}

func (*IP4ArpEvent) GetMessageName() string {
	return "ip4_arp_event"
}
func (*IP4ArpEvent) GetMessageType() api.MessageType {
	return api.EventMessage
}
func (*IP4ArpEvent) GetCrcString() string {
	return "79b2d94d"
}
func NewIP4ArpEvent() api.Message {
	return &IP4ArpEvent{}
}

// WantIP6NdEvents represents the VPP binary API message 'want_ip6_nd_events'.
//
type WantIP6NdEvents struct {
	EnableDisable uint8
	Pid           uint32
	Address       []byte `struc:"[16]byte"`
}

func (*WantIP6NdEvents) GetMessageName() string {
	return "want_ip6_nd_events"
}
func (*WantIP6NdEvents) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantIP6NdEvents) GetCrcString() string {
	return "9586ba55"
}
func NewWantIP6NdEvents() api.Message {
	return &WantIP6NdEvents{}
}

// WantIP6NdEventsReply represents the VPP binary API message 'want_ip6_nd_events_reply'.
//
type WantIP6NdEventsReply struct {
	Retval int32
}

func (*WantIP6NdEventsReply) GetMessageName() string {
	return "want_ip6_nd_events_reply"
}
func (*WantIP6NdEventsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantIP6NdEventsReply) GetCrcString() string {
	return "95458aad"
}
func NewWantIP6NdEventsReply() api.Message {
	return &WantIP6NdEventsReply{}
}

// IP6NdEvent represents the VPP binary API message 'ip6_nd_event'.
//
type IP6NdEvent struct {
	Pid       uint32
	SwIfIndex uint32
	Address   []byte `struc:"[16]byte"`
	NewMac    []byte `struc:"[6]byte"`
	MacIP     uint8
}

func (*IP6NdEvent) GetMessageName() string {
	return "ip6_nd_event"
}
func (*IP6NdEvent) GetMessageType() api.MessageType {
	return api.EventMessage
}
func (*IP6NdEvent) GetCrcString() string {
	return "b9c7870c"
}
func NewIP6NdEvent() api.Message {
	return &IP6NdEvent{}
}

// ProxyArpAddDel represents the VPP binary API message 'proxy_arp_add_del'.
//
type ProxyArpAddDel struct {
	VrfID      uint32
	IsAdd      uint8
	LowAddress []byte `struc:"[4]byte"`
	HiAddress  []byte `struc:"[4]byte"`
}

func (*ProxyArpAddDel) GetMessageName() string {
	return "proxy_arp_add_del"
}
func (*ProxyArpAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ProxyArpAddDel) GetCrcString() string {
	return "4bef9951"
}
func NewProxyArpAddDel() api.Message {
	return &ProxyArpAddDel{}
}

// ProxyArpAddDelReply represents the VPP binary API message 'proxy_arp_add_del_reply'.
//
type ProxyArpAddDelReply struct {
	Retval int32
}

func (*ProxyArpAddDelReply) GetMessageName() string {
	return "proxy_arp_add_del_reply"
}
func (*ProxyArpAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ProxyArpAddDelReply) GetCrcString() string {
	return "8e2d621d"
}
func NewProxyArpAddDelReply() api.Message {
	return &ProxyArpAddDelReply{}
}

// ProxyArpIntfcEnableDisable represents the VPP binary API message 'proxy_arp_intfc_enable_disable'.
//
type ProxyArpIntfcEnableDisable struct {
	SwIfIndex     uint32
	EnableDisable uint8
}

func (*ProxyArpIntfcEnableDisable) GetMessageName() string {
	return "proxy_arp_intfc_enable_disable"
}
func (*ProxyArpIntfcEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ProxyArpIntfcEnableDisable) GetCrcString() string {
	return "3ee1998e"
}
func NewProxyArpIntfcEnableDisable() api.Message {
	return &ProxyArpIntfcEnableDisable{}
}

// ProxyArpIntfcEnableDisableReply represents the VPP binary API message 'proxy_arp_intfc_enable_disable_reply'.
//
type ProxyArpIntfcEnableDisableReply struct {
	Retval int32
}

func (*ProxyArpIntfcEnableDisableReply) GetMessageName() string {
	return "proxy_arp_intfc_enable_disable_reply"
}
func (*ProxyArpIntfcEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ProxyArpIntfcEnableDisableReply) GetCrcString() string {
	return "23d273cd"
}
func NewProxyArpIntfcEnableDisableReply() api.Message {
	return &ProxyArpIntfcEnableDisableReply{}
}

// ResetFib represents the VPP binary API message 'reset_fib'.
//
type ResetFib struct {
	VrfID  uint32
	IsIpv6 uint8
}

func (*ResetFib) GetMessageName() string {
	return "reset_fib"
}
func (*ResetFib) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*ResetFib) GetCrcString() string {
	return "6f17106b"
}
func NewResetFib() api.Message {
	return &ResetFib{}
}

// ResetFibReply represents the VPP binary API message 'reset_fib_reply'.
//
type ResetFibReply struct {
	Retval int32
}

func (*ResetFibReply) GetMessageName() string {
	return "reset_fib_reply"
}
func (*ResetFibReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*ResetFibReply) GetCrcString() string {
	return "990dcbf8"
}
func NewResetFibReply() api.Message {
	return &ResetFibReply{}
}

// SetArpNeighborLimit represents the VPP binary API message 'set_arp_neighbor_limit'.
//
type SetArpNeighborLimit struct {
	IsIpv6           uint8
	ArpNeighborLimit uint32
}

func (*SetArpNeighborLimit) GetMessageName() string {
	return "set_arp_neighbor_limit"
}
func (*SetArpNeighborLimit) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*SetArpNeighborLimit) GetCrcString() string {
	return "c1690cb4"
}
func NewSetArpNeighborLimit() api.Message {
	return &SetArpNeighborLimit{}
}

// SetArpNeighborLimitReply represents the VPP binary API message 'set_arp_neighbor_limit_reply'.
//
type SetArpNeighborLimitReply struct {
	Retval int32
}

func (*SetArpNeighborLimitReply) GetMessageName() string {
	return "set_arp_neighbor_limit_reply"
}
func (*SetArpNeighborLimitReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*SetArpNeighborLimitReply) GetCrcString() string {
	return "a6b30518"
}
func NewSetArpNeighborLimitReply() api.Message {
	return &SetArpNeighborLimitReply{}
}

// IoamEnable represents the VPP binary API message 'ioam_enable'.
//
type IoamEnable struct {
	ID          uint16
	Seqno       uint8
	Analyse     uint8
	PotEnable   uint8
	TraceEnable uint8
	NodeID      uint32
}

func (*IoamEnable) GetMessageName() string {
	return "ioam_enable"
}
func (*IoamEnable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IoamEnable) GetCrcString() string {
	return "7bd4abf9"
}
func NewIoamEnable() api.Message {
	return &IoamEnable{}
}

// IoamEnableReply represents the VPP binary API message 'ioam_enable_reply'.
//
type IoamEnableReply struct {
	Retval int32
}

func (*IoamEnableReply) GetMessageName() string {
	return "ioam_enable_reply"
}
func (*IoamEnableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IoamEnableReply) GetCrcString() string {
	return "58a8fedc"
}
func NewIoamEnableReply() api.Message {
	return &IoamEnableReply{}
}

// IoamDisable represents the VPP binary API message 'ioam_disable'.
//
type IoamDisable struct {
	ID uint16
}

func (*IoamDisable) GetMessageName() string {
	return "ioam_disable"
}
func (*IoamDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*IoamDisable) GetCrcString() string {
	return "aff26d33"
}
func NewIoamDisable() api.Message {
	return &IoamDisable{}
}

// IoamDisableReply represents the VPP binary API message 'ioam_disable_reply'.
//
type IoamDisableReply struct {
	Retval int32
}

func (*IoamDisableReply) GetMessageName() string {
	return "ioam_disable_reply"
}
func (*IoamDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*IoamDisableReply) GetCrcString() string {
	return "ef118a9d"
}
func NewIoamDisableReply() api.Message {
	return &IoamDisableReply{}
}
